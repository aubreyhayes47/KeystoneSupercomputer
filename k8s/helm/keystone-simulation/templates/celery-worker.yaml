{{- if .Values.celeryWorker.enabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: celery-config
  namespace: {{ .Values.global.namespace }}
  labels:
    app: celery-worker
    app.kubernetes.io/name: celery-worker
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: keystone-simulation
    helm.sh/chart: {{ include "keystone-simulation.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  CELERY_BROKER_URL: {{ .Values.celeryWorker.config.brokerUrl | quote }}
  CELERY_RESULT_BACKEND: {{ .Values.celeryWorker.config.resultBackend | quote }}
  PYTHONUNBUFFERED: "1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
  namespace: {{ .Values.global.namespace }}
  labels:
    app: celery-worker
    app.kubernetes.io/name: celery-worker
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: keystone-simulation
    helm.sh/chart: {{ include "keystone-simulation.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.celeryWorker.replicaCount }}
  selector:
    matchLabels:
      app: celery-worker
  template:
    metadata:
      labels:
        app: celery-worker
        app.kubernetes.io/name: celery-worker
        app.kubernetes.io/component: worker
        app.kubernetes.io/part-of: keystone-simulation
    spec:
      containers:
      - name: celery-worker
        image: "{{ .Values.celeryWorker.image.repository }}:{{ .Values.celeryWorker.image.tag }}"
        imagePullPolicy: {{ .Values.celeryWorker.image.pullPolicy }}
        envFrom:
        - configMapRef:
            name: celery-config
        volumeMounts:
        - name: data
          mountPath: /data
        - name: celery-app
          mountPath: /app/celery_app.py
          subPath: celery_app.py
        resources:
          {{- toYaml .Values.celeryWorker.resources | nindent 10 }}
      volumes:
      - name: data
        hostPath:
          path: {{ .Values.celeryWorker.volumes.dataPath }}
          type: Directory
      - name: celery-app
        hostPath:
          path: {{ .Values.celeryWorker.volumes.celeryAppPath }}
          type: File
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
