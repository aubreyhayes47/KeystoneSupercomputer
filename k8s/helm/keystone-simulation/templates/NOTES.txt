╔═══════════════════════════════════════════════════════════════════════════════╗
║                    Keystone Simulation Stack Deployed!                        ║
╚═══════════════════════════════════════════════════════════════════════════════╝

Thank you for installing {{ .Chart.Name }} (version {{ .Chart.Version }})!

Your release is named: {{ .Release.Name }}

📦 Installed Components:
{{- if .Values.redis.enabled }}
  ✓ Redis (message broker)
{{- end }}
{{- if .Values.celeryWorker.enabled }}
  ✓ Celery Workers ({{ .Values.celeryWorker.replicaCount }} replicas)
{{- end }}
{{- if .Values.fenicsx.enabled }}
  ✓ FEniCSx Job Template
{{- end }}
{{- if .Values.lammps.enabled }}
  ✓ LAMMPS Job Template
{{- end }}
{{- if .Values.openfoam.enabled }}
  ✓ OpenFOAM Job Template
{{- end }}

🚀 Quick Start:

1. Check all resources are running:
   kubectl get all -n {{ .Values.global.namespace }}

2. View pods status:
   kubectl get pods -n {{ .Values.global.namespace }}

3. Run a simulation job:
   {{- if .Values.fenicsx.enabled }}
   # FEniCSx example:
   kubectl create job -n {{ .Values.global.namespace }} fenicsx-test --from=job/fenicsx-simulation
   kubectl logs -n {{ .Values.global.namespace }} job/fenicsx-test -f
   {{- end }}
   {{- if .Values.lammps.enabled }}
   # LAMMPS example:
   kubectl create job -n {{ .Values.global.namespace }} lammps-test --from=job/lammps-simulation
   kubectl logs -n {{ .Values.global.namespace }} job/lammps-test -f
   {{- end }}
   {{- if .Values.openfoam.enabled }}
   # OpenFOAM example:
   kubectl create job -n {{ .Values.global.namespace }} openfoam-test --from=job/openfoam-simulation
   kubectl logs -n {{ .Values.global.namespace }} job/openfoam-test -f
   {{- end }}

4. Scale Celery workers:
   kubectl scale deployment -n {{ .Values.global.namespace }} celery-worker --replicas=5

5. Port-forward to Redis (for debugging):
   kubectl port-forward -n {{ .Values.global.namespace }} svc/redis 6379:6379

📚 Documentation:
   For more information, see the README at:
   https://github.com/aubreyhayes47/KeystoneSupercomputer

🔧 Troubleshooting:
   # Describe a pod
   kubectl describe pod -n {{ .Values.global.namespace }} <pod-name>

   # View logs
   kubectl logs -n {{ .Values.global.namespace }} <pod-name>

   # Check service endpoints
   kubectl get endpoints -n {{ .Values.global.namespace }}

Happy simulating! 🎉

